#include<iostream>
using namespace std;



void createMatrix(int mat[10][10],int rows,int cols){
	for(int i=0;i<rows;i++){
		for(int j=0;j<cols;j++){
			cout<<"Enter element:";
			cin>>mat[i][j];
		}
	}
}

void addMatrix(int a[10][10],int b[10][10],int c[10][10],int rows,int cols){
	for(int i=0;i<rows;i++){
		for(int j=0;j<cols;j++){
			c[i][j]=a[i][j]+b[i][j];
		}
	}
}

void subtractMatrix(int a[10][10],int b[10][10],int c[10][10],int rows,int cols){
	for(int i=0;i<rows;i++){
		for(int j=0;j<cols;j++){
			c[i][j]=a[i][j]-b[i][j];
		}
	}
}

void multiplyMatrix(int a[10][10],int b[10][10],int c[10][10],int rows,int cols){
	for(int i=0;i<rows;i++){
		for(int j=0;j<cols;j++){
			c[i][j]=0;
			for(int k=0;k<cols;k++){
				c[i][j]+=a[i][k]*b[k][j];
			}
		}
	}
}

void transposeMatrix(int a[10][10],int b[10][10],int rows,int cols){
	for(int i=0;i<rows;i++){
		for(int j=0;j<cols;j++){
			b[j][i]=a[i][j];
		}
	}
	
	for(int i=0;i<rows;i++){
		for(int j=0;j<cols;j++){
			cout<<b[i][j]<<" ";
		}
		cout<<endl;
	}
}


void displayMatrix(int c[10][10],int rows,int cols){
	for(int i=0;i<rows;i++){
		for(int j=0;j<cols;j++){
			cout<<c[i][j]<<" ";
		}
		cout<<endl;
	}
}


int main(){
	int choice;
	int a[10][10],b[10][10],c[10][10];
	int r1,c1;
	
	cout<<"Enter the rows and cols:";
	cin>>r1>>c1;
	
	do{
		cout<<"1. Create Matrix 1\n";
		cout<<"2. Create Matrix 2\n";
		cout<<"3. Add Matrix\n";
		cout<<"4.Subtract the matrix\n";
		cout<<"5. Multiplication of matrix\n";
		cout<<"6.Transpose of matrix\n";
		cout<<"7. Display the matrix\n";
		cout<<"Enter the option\n";
		cin>>choice;
		
		
		switch(choice){
			case 1:
				createMatrix(a,r1,c1);
				break;
			case 2:
				createMatrix(b,r1,c1);
				break;
			case 3:
				addMatrix(a,b,c,r1,c1);
				break;
				
			case 4:
				subtractMatrix(a,b,c,r1,c1);
				break;
				
			case 5:
				multiplyMatrix(a,b,c,r1,c1);
				break;
				
			case 6:
				transposeMatrix(a,b,r1,c1);
				break;
			case 7:
				displayMatrix(c,r1,c1);
				break;
				
				
		}
		
	}while(choice!=8);
}
